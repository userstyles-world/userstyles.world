a {
    color: var(--ac-1);
    text-decoration: none;

    &:hover:not(.btn),
    &:active:not(.btn),
    &:focus:not(.btn) {
        text-decoration: underline;
    }

    // Special styles for JS functionality and external links.
    &::after {
        font-size: 0.7rem;
        vertical-align: super;
        align-self: flex-start;
        color: var(--fg-3);
    }
    &[href^='/link/'],
    &[href^='http'] {
        &::after { content: '[\01F517]' }
    }
    &[href^='java'],
    &[data-javascript] {
        &::after { content: '{JS}' }
    }
    &[href^='mail']::after { content: '[ðŸ“§]' }

    &[data-javascript] {
        cursor: pointer;
    }
}

h1 { font-size: 2.5em }
h2 { font-size: 1.8em }
img { width: 100% }
hr { border: none; border-top: 1px solid var(--bg-3)  }

.btn {
    $x: color 0.15s ease-in-out;
    $y: border-color 0.15s ease-in-out;
    $z: background-color 0.15s ease-in-out;
    $s: box-shadow 0.15s ease-in-out;
    padding: 0.5rem 0.8rem;
    border-radius: var(--br-3);
    transition: $x, $y, $z, $s;
    text-decoration: none;
    border: 1px solid var(--bg-3);
    background-color: var(--bg-2);
    color: var(--fg-2);
    outline: none;
    cursor: pointer;

    ::-moz-focus-inner { outline: none }

    &:hover {
        color: var(--fg-1);
        border-color: var(--bg-4);
    }

    &:not(.active):focus {
        color: var(--fg-1);
        border-color: var(--bg-5);
        box-shadow: 0 0 0 0.25rem var(--bg-f);
    }

    &.active {
        color: var(--fg-1);
        border-color: var(--bg-5);
        background-color: var(--bg-3);
    }

    &.icon {
        display: flex;
        align-items: center;
        > svg { margin-right: 0.4rem }
    }

    &.primary {
        color: var(--fg-1);
        border-color: var(--ac-3);
        background-color: var(--ac-4);

        &:hover {
            color: var(--inverse);
            border-color: var(--ac-2);
        }

        &:not(.active):focus {
            color: var(--inverse);
            border-color: var(--ac-2);
            box-shadow: 0 0 0 0.25rem var(--ac-f);
        }
    }

    &.stylus {
        color: var(--fg-1);
        border-color: var(--st-3);
        background-color: var(--st-4);

        &::after { color: inherit }

        &:hover {
            color: var(--inverse);
            border-color: var(--st-2);
        }

        &:not(.active):focus {
            color: var(--inverse);
            border-color: var(--st-2);
            box-shadow: 0 0 0 0.25rem var(--st-f);
        }
    }

    &[disabled] {
        color: var(--fg-4);
        border-color: var(--bg-3);
    }

    // Override light mode colors.
    [data-color-scheme="light"] & {
        &.primary, &.stylus {
            color: var(--inverse) !important;
        }
    }

    &.oauth {
        width: 100%;
        &:not(:first-child) { margin-left: 1rem }
    }
}

.danger { color: var(--dg) }

// TODO: Refactor as an "alert" component later.
.err {
    $red: $dg-dark;
    margin: 1rem auto;
    padding: 1rem;
    color: $red;
    border-left: var(--br-3) solid transparentize($red, 0.5);
    background-color: transparentize($red, 0.9);
    border-radius: var(--br-3);

    ul { padding-left: 1.5rem }
    p:last-child { margin-bottom: 0 }

    [data-color-scheme="light"] & {
        $red: $dg-light;
        color: $red;
        border-left: var(--br-3) solid transparentize($red, 0.5);
        background-color: transparentize($red, 0.9);
        border-radius: var(--br-3);
    }
}

input[type="checkbox"],
label[for="remember"] {
    width: unset;
}

@media (prefers-reduced-motion: reduce) {
    *,
    ::before,
    ::after {
      animation-delay: -1ms !important;
      animation-duration: 1ms !important;
      animation-iteration-count: 1 !important;
      background-attachment: initial !important;
      scroll-behavior: auto !important;
      transition-delay: 0s !important;
      transition-duration: 0s !important;
    }
}

#welcome { max-width: var(--form-max-width) }

.share {
    flex-flow: row wrap;
    #share {
        min-width: 100px;
        max-width: 300px;
        border-color: var(--bg-3);
        box-shadow: none;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
    @media screen and (max-width: 560px) {
        > span {
            width: 100%;
            margin-bottom: 0.5rem;
        }
    }
}

@media screen and (max-width: 1250px) {
    .header {
        flex-flow: row wrap;
        > .share {
            width: 100%;
            #share { max-width: unset }
        }
        > .actions {
            margin: 1rem 0 0;
            flex-flow: row wrap;
            > .btn {
                margin-bottom: 0.5rem;
                &:first-child { margin-left: 0 }
            }
        }
    }
}

.chart {
    display: flex;
    padding: 0.5rem;
    border-radius: var(--br-3);
    border: 1px solid var(--bg-3);
    background-color: var(--bg-2);

    svg[viewBox] {
        width: 100%;
        height: 100%;
        .bg { fill: var(--bg-2) }
        > path {
            &[style*='fill:rgba(255'] { fill: var(--bg-2) !important }
            &[style*='stroke:rgba(51'] { stroke: var(--bg-5) !important }
        }
        > text {
            fill: var(--fg-3) !important;
            font-family: var(--font-sans) !important;
        }

        // Exclude bar charts.
        &:not([height='360']) > path {
            &:nth-last-child(-n+10) {
                stroke-linecap: round;
                stroke-linejoin: round;
                stroke-width: 2 !important;
                // &:hover { stroke-width: 4 !important }
            }
        }
    }
}

.Style-source {
    overflow: hidden;
    border-radius: var(--br-3);
    border: 1px solid var(--bg-4);
    > pre { border: none } // TODO: Remove when refactoring.
}

.search-perf-metrics {
    line-height: 1.5;
    color: var(--fg-2);
    > :nth-child(2) {
        padding-left: 0.25rem;
        &::after {
            content: 'Â·';
            padding-left: 0.5rem;
            color: var(--fg-4);
        }
    }
}
